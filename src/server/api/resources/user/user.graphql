type User {
    USER_ID: String!
    NAME: String!
    LAST_NAME: String !
    ADDRESS: Address
    EMPLOYEE: Boolean!
    HasEverythingReturned: Boolean
}

input updateUser {
    USER_ID: String!
    NAME: String
    LAST_NAME: String
    ADDRESS: updateAddress
    EMPLOYEE: Boolean
}

input newUser{
    USER_ID: String!
    NAME: String!
    LAST_NAME: String!
    PASSWORD: String!,
    ADDRESS: newAddress!
}

extend type Query {
    getUser(id: ID!): User
    getUsers: [User]!
    validate(id: ID!, pwd: String!): User
    getUserAchievements(id: ID!): [Achievement]!
}

extend type Mutation {
    updateUser(input: updateUser): User
    deleteUser(id: ID!, isEmployee: Boolean): Boolean!
    addUser(input: newUser!): ID
}